[{"author":null,"categories":["other"],"content":"","date":1670667677,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1670667677,"objectID":"6ad3218c385d0f4215b07001c17347b7","permalink":"https://wangzitao6.github.io/2022-12-10-%E9%9B%86%E6%88%90GithubAction%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/","publishdate":"2022-12-10T18:21:17+08:00","readingtime":2,"relpermalink":"/2022-12-10-%E9%9B%86%E6%88%90GithubAction%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/","section":"post","summary":"前因: 前面讲过用Travis CI自动部署，现在Travis CI不是很好用，发现github官方提供了GitHub Action,我们使用Git","tags":["blog","其他"],"title":"Hugo集成Github Action实现自动发布","type":"post","url":"/2022-12-10-%E9%9B%86%E6%88%90GithubAction%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/","weight":0,"wordcount":760},{"author":null,"categories":["jvm"],"content":"","date":1626075335,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1626075335,"objectID":"0415d79404bd4d6a28ceae294a5ead1b","permalink":"https://wangzitao6.github.io/2021-07-12-jvm%E8%B0%83%E4%BC%98/","publishdate":"2021-07-12T15:35:35+08:00","readingtime":2,"relpermalink":"/2021-07-12-jvm%E8%B0%83%E4%BC%98/","section":"post","summary":"jps：查看当前java进程id，java本身就是一个进程 jinfo -flags 6198 查看jvm参数 java -XX 查看更详细的jvm参数 java -XX:+PrintFlagsInitial 查看jvm设置初始值的 java -XX:+PrintFlagsFinal jvm","tags":["jvm"],"title":"jvm调优","type":"post","url":"/2021-07-12-jvm%E8%B0%83%E4%BC%98/","weight":0,"wordcount":993},{"author":null,"categories":["other"],"content":"","date":1623742535,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1623742535,"objectID":"a835e53718da69022b1d11e48e1e11bb","permalink":"https://wangzitao6.github.io/2021-06-15-mqtt/","publishdate":"2021-06-15T15:35:35+08:00","readingtime":3,"relpermalink":"/2021-06-15-mqtt/","section":"post","summary":"MQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅（publish/subscribe）模式的轻量","tags":["网络"],"title":"mqtt","type":"post","url":"/2021-06-15-mqtt/","weight":0,"wordcount":1313},{"author":null,"categories":["other"],"content":"","date":1618472135,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1618472135,"objectID":"9061c093f170f0022bd94daa79a78aae","permalink":"https://wangzitao6.github.io/2021-04-15-%E5%BC%82%E6%AD%A5io/","publishdate":"2021-04-15T15:35:35+08:00","readingtime":3,"relpermalink":"/2021-04-15-%E5%BC%82%E6%AD%A5io/","section":"post","summary":"IO -\u0026gt;网络通信IO socket -\u0026gt;BIO NIO 多路复用 -\u0026gt;Netty BIO 每线程，每连接 优势:可以接收很多的连接 缺点:线程内存浪费 ，CPU调度消耗 根源 BLOCKING 阻塞 accept recv 解决方案 NONBLOCKING NIO","tags":["io"],"title":"Io","type":"post","url":"/2021-04-15-%E5%BC%82%E6%AD%A5io/","weight":0,"wordcount":1472},{"author":null,"categories":["other"],"content":"","date":1596436221,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1596436221,"objectID":"e8003d957538027b55c8168f8642c206","permalink":"https://wangzitao6.github.io/2020-08-03-tps%E4%B8%8Eqps/","publishdate":"2020-08-03T14:30:21+08:00","readingtime":1,"relpermalink":"/2020-08-03-tps%E4%B8%8Eqps/","section":"post","summary":"TPS TPS：是 TransactionsPerSecond的缩写，也就是事务数/秒。它是软件测试结果的测量单位。一个事务是指一个客户机向服务器发","tags":["性能"],"title":"tps与qps","type":"post","url":"/2020-08-03-tps%E4%B8%8Eqps/","weight":0,"wordcount":479},{"author":null,"categories":["多线程"],"content":"","date":1594284003,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594284003,"objectID":"793193fd6e047780f6ef1d7ad267e842","permalink":"https://wangzitao6.github.io/2020-07-09-abstractqueuedsynchronizer%E8%B6%85%E8%AF%A6%E7%BB%86%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/","publishdate":"2020-07-09T16:40:03+08:00","readingtime":10,"relpermalink":"/2020-07-09-abstractqueuedsynchronizer%E8%B6%85%E8%AF%A6%E7%BB%86%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/","section":"post","summary":"今天我们来研究学习一下 AbstractQueuedSynchronizer类的相关原理， java.util.concurrent包中很多类都","tags":["JUC"],"title":"AbstractQueuedSynchronizer超详细原理解析","type":"post","url":"/2020-07-09-abstractqueuedsynchronizer%E8%B6%85%E8%AF%A6%E7%BB%86%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/","weight":0,"wordcount":4580},{"author":null,"categories":["sql"],"content":"","date":1594084999,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1594084999,"objectID":"dc90e7da5ffdf4a22e178a8d9ae7c6c7","permalink":"https://wangzitao6.github.io/2020-07-06-mysql%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E7%BB%93%E6%9D%9F%E5%88%86%E9%9A%94%E7%AC%A6/","publishdate":"2020-07-07T09:23:19+08:00","readingtime":2,"relpermalink":"/2020-07-06-mysql%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E7%BB%93%E6%9D%9F%E5%88%86%E9%9A%94%E7%AC%A6/","section":"post","summary":"1. 自定义变量 1-1. SET方式赋值 自定义变量前边必须加一个 @ 符号，环境变量赋值用SET,查询变量时用 SELECT,不过仍然需要在变量名称前加一个@","tags":["MySQL"],"title":"Mysql自定义变量和结束分隔符","type":"post","url":"/2020-07-06-mysql%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E7%BB%93%E6%9D%9F%E5%88%86%E9%9A%94%E7%AC%A6/","weight":0,"wordcount":954},{"author":null,"categories":["elk"],"content":"","date":1592999785,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1592999785,"objectID":"ef2e16ed9e74871108288a1aa26a9dbd","permalink":"https://wangzitao6.github.io/2020-06-24-logstash%E5%89%B2%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%88%B0es/","publishdate":"2020-06-24T19:56:25+08:00","readingtime":2,"relpermalink":"/2020-06-24-logstash%E5%89%B2%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%88%B0es/","section":"post","summary":"ElasticSearch创建索引 创建ES索引 PUT logstash_demo { \u0026#34;mappings\u0026#34; : { \u0026#34;properties\u0026#34; : { \u0026#34;email\u0026#34; : { \u0026#34;type\u0026#34; : \u0026#34;text\u0026#34; }, \u0026#34;first_name\u0026#34; : { \u0026#34;type\u0026#34; : \u0026#34;text\u0026#34; }, \u0026#34;last_name\u0026#34; : { \u0026#34;type\u0026#34; : \u0026#34;text\u0026#34; }, \u0026#34;uid\u0026#34; : { \u0026#34;type\u0026#34; : \u0026#34;long\u0026#34; } } } } 创建好后查询索","tags":["elk"],"title":"Logstash割接mysql数据到es","type":"post","url":"/2020-06-24-logstash%E5%89%B2%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%88%B0es/","weight":0,"wordcount":607},{"author":null,"categories":["net"],"content":"网络基础知识","date":1568790362,"description":"网络基础知识","dir":"post/","excerpt_html":"网络基础知识","excerpt_text":"网络基础知识","expirydate":-62135596800,"fuzzywordcount":3600,"html":"网络基础知识","keywords":null,"kind":"page","lang":"en","lastmod":1568790362,"objectID":"356e4c3852e7cb54d777af0aed06cd4a","permalink":"https://wangzitao6.github.io/2019-09-15-http%E6%8A%A5%E6%96%87%E8%A7%A3%E6%9E%90/","publishdate":"2019-09-18T15:06:02+08:00","readingtime":8,"relpermalink":"/2019-09-15-http%E6%8A%A5%E6%96%87%E8%A7%A3%E6%9E%90/","section":"post","summary":"General Request URL:请求的URL地址 Request Method: 请求方法，get/post/put/…… Status Code：状态码，200 为请求成功 Remote Address：路由地址 注： x-forwarded-for","tags":["网络"],"title":"http报文解析","type":"post","url":"/2019-09-15-http%E6%8A%A5%E6%96%87%E8%A7%A3%E6%9E%90/","weight":0,"wordcount":3521},{"author":null,"categories":["jvm"],"content":"","date":1567414048,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1567414048,"objectID":"581e4d792bdf7dcf6afc60fb49772149","permalink":"https://wangzitao6.github.io/2018-07-03-java%E5%B8%B8%E9%87%8F%E6%B1%A0%E7%90%86%E8%A7%A3%E4%B8%8E%E6%80%BB%E7%BB%93/","publishdate":"2019-09-02T16:47:28+08:00","readingtime":7,"relpermalink":"/2018-07-03-java%E5%B8%B8%E9%87%8F%E6%B1%A0%E7%90%86%E8%A7%A3%E4%B8%8E%E6%80%BB%E7%BB%93/","section":"post","summary":"什么是常量 用final修饰的成员变量表示常量，值一但确定就无法修改。 final修饰的变量有三种：静态变量、实例变量和局部变量，分别表示三种类","tags":["java","jvm"],"title":"Java常量池理解与总结","type":"post","url":"/2018-07-03-java%E5%B8%B8%E9%87%8F%E6%B1%A0%E7%90%86%E8%A7%A3%E4%B8%8E%E6%80%BB%E7%BB%93/","weight":0,"wordcount":3310},{"author":null,"categories":["java"],"content":"","date":1566786226,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1566786226,"objectID":"01150fe0386e96e46f68460bce135603","permalink":"https://wangzitao6.github.io/2019-08-26-integer%E7%9A%84integercache/","publishdate":"2019-08-26T10:23:46+08:00","readingtime":3,"relpermalink":"/2019-08-26-integer%E7%9A%84integercache/","section":"post","summary":"首先我们来看这样一个例子: int m = 10; int n = 10; System.out.println(m == n); int j = 128; int k = 128; System.out.println(j == k); 输出结果： true true 出现这样的一个结果大家都意外。 下面我们再看一个例子： Integer a","tags":["java","基础"],"title":"Integer的IntegerCache","type":"post","url":"/2019-08-26-integer%E7%9A%84integercache/","weight":0,"wordcount":1098},{"author":null,"categories":["java"],"content":"","date":1566630565,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1566630565,"objectID":"0181e5072056e24d1c5b9d35155b576d","permalink":"https://wangzitao6.github.io/2019-08-24-java%E4%BD%8D%E8%BF%90%E7%AE%97/","publishdate":"2019-08-24T15:09:25+08:00","readingtime":4,"relpermalink":"/2019-08-24-java%E4%BD%8D%E8%BF%90%E7%AE%97/","section":"post","summary":"单位换算 bit：位 一个二进制数据0或1，是1bit； byte：字节 1 byte = 8 bit , 存储空间的基本计量单位； 一个英文字符占一个字节 1 字母 = 1 byte = 8","tags":["java","基础"],"title":"Java位运算","type":"post","url":"/2019-08-24-java%E4%BD%8D%E8%BF%90%E7%AE%97/","weight":0,"wordcount":1807},{"author":null,"categories":["java"],"content":"","date":1566616385,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1566616385,"objectID":"30d788d4ea1ebb8fe47abab673b700d5","permalink":"https://wangzitao6.github.io/2019-08-24-int%E7%B1%BB%E5%9E%8B%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2byte%E7%B1%BB%E5%9E%8B/","publishdate":"2019-08-24T11:13:05+08:00","readingtime":2,"relpermalink":"/2019-08-24-int%E7%B1%BB%E5%9E%8B%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2byte%E7%B1%BB%E5%9E%8B/","section":"post","summary":"java中为什么int类型的-129转换成byte类型的会变成127 int类型一般是4个字节，一个字节有8位，这样int型数据二进制的完整形","tags":["java","基础"],"title":"Int类型强制转换byte类型","type":"post","url":"/2019-08-24-int%E7%B1%BB%E5%9E%8B%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2byte%E7%B1%BB%E5%9E%8B/","weight":0,"wordcount":984},{"author":null,"categories":["java"],"content":"","date":1566548913,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1566548913,"objectID":"d739a2737457e10af982c3c3989aea97","permalink":"https://wangzitao6.github.io/2019-08-23-%E5%8E%9F%E7%A0%81-%E8%A1%A5%E7%A0%81-%E5%8F%8D%E7%A0%81/","publishdate":"2019-08-23T16:28:33+08:00","readingtime":6,"relpermalink":"/2019-08-23-%E5%8E%9F%E7%A0%81-%E8%A1%A5%E7%A0%81-%E5%8F%8D%E7%A0%81/","section":"post","summary":"Java数据类型 了解原码、补码、反码之前，我们先看下java的数据类型： Java基本类型共有八种，它们的取值范围是固定的，不会随着机器硬件环","tags":["java","基础"],"title":"原码 补码 反码","type":"post","url":"/2019-08-23-%E5%8E%9F%E7%A0%81-%E8%A1%A5%E7%A0%81-%E5%8F%8D%E7%A0%81/","weight":0,"wordcount":2940},{"author":null,"categories":["sql"],"content":"讲解mysql配置文件读取顺序,文件中配置读取顺序","date":1566198389,"description":"讲解mysql配置文件读取顺序,文件中配置读取顺序","dir":"post/","excerpt_html":"讲解mysql配置文件读取顺序,文件中配置读取顺序","excerpt_text":"讲解mysql配置文件读取顺序,文件中配置读取顺序","expirydate":-62135596800,"fuzzywordcount":1800,"html":"讲解mysql配置文件读取顺序,文件中配置读取顺序","keywords":null,"kind":"page","lang":"en","lastmod":1566198389,"objectID":"7fd887fdb409e357e9d4dda265e1bc4f","permalink":"https://wangzitao6.github.io/2019-08-19-MYSQL%E9%85%8D%E7%BD%AE%E8%AF%BB%E5%8F%96/","publishdate":"2019-08-19T15:06:29+08:00","readingtime":4,"relpermalink":"/2019-08-19-MYSQL%E9%85%8D%E7%BD%AE%E8%AF%BB%E5%8F%96/","section":"post","summary":"配置文件读取 在Unix, Linux 或者 Mac OS X 系统中, MYSQL 从以下配置文件中读取启动配置, 读取顺序由上到下: File Name Purpose /etc/my.cnf 全局配置选项 /etc/mysql/my.cnf 全局配置选项 SYSCONFDIR/my.cnf 全局配置选","tags":["配置","MySQL"],"title":"MYSQL配置读取","type":"post","url":"/2019-08-19-MYSQL%E9%85%8D%E7%BD%AE%E8%AF%BB%E5%8F%96/","weight":0,"wordcount":1738},{"author":null,"categories":["other"],"content":"Markdown","date":1564725577,"description":"Markdown","dir":"post/","excerpt_html":"Markdown","excerpt_text":"Markdown","expirydate":-62135596800,"fuzzywordcount":800,"html":"Markdown","keywords":null,"kind":"page","lang":"en","lastmod":1564725577,"objectID":"281d9ac563af664ea8337b76a167ccd5","permalink":"https://wangzitao6.github.io/2018-08-02-markdown%E8%BF%9B%E9%98%B6%E8%AF%AD%E6%B3%95/","publishdate":"2019-08-02T13:59:37+08:00","readingtime":2,"relpermalink":"/2018-08-02-markdown%E8%BF%9B%E9%98%B6%E8%AF%AD%E6%B3%95/","section":"post","summary":"字体、大小、颜色 \u0026lt;font face=\u0026#34;黑体\u0026#34;\u0026gt;我是黑体字\u0026lt;/font\u0026gt; \u0026lt;font face=\u0026#34;微软雅黑\u0026#34;\u0026g","tags":["其他"],"title":"Markdown进阶语法","type":"post","url":"/2018-08-02-markdown%E8%BF%9B%E9%98%B6%E8%AF%AD%E6%B3%95/","weight":0,"wordcount":723},{"author":null,"categories":["net"],"content":"","date":1555742297,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1555742297,"objectID":"7ccac1d6110b5239f5c64c88c9b0bd9d","permalink":"https://wangzitao6.github.io/2019-04-20-%E4%BA%86%E8%A7%A3%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/","publishdate":"2019-04-20T14:38:17+08:00","readingtime":7,"relpermalink":"/2019-04-20-%E4%BA%86%E8%A7%A3%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/","section":"post","summary":"三次握手 TCP协议中，主动发起请求的一端称为『客户端』，被动连接的一端称为『服务端』。不管是客户端还是服务端，TCP连接建立完后都能发送和接","tags":["网络"],"title":"了解三次握手与四次挥手","type":"post","url":"/2019-04-20-%E4%BA%86%E8%A7%A3%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E4%B8%8E%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/","weight":0,"wordcount":3013},{"author":null,"categories":["net"],"content":"","date":1555667559,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1555667559,"objectID":"d88668f2d60caa52818f12c4eb494256","permalink":"https://wangzitao6.github.io/2019-01-19-http%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%8A%B6%E6%80%81%E4%B8%AD%E7%9A%84%E7%8A%B6%E6%80%81%E5%88%B0%E5%BA%95%E6%8C%87%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88/","publishdate":"2019-04-19T17:52:39+08:00","readingtime":8,"relpermalink":"/2019-01-19-http%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%8A%B6%E6%80%81%E4%B8%AD%E7%9A%84%E7%8A%B6%E6%80%81%E5%88%B0%E5%BA%95%E6%8C%87%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88/","section":"post","summary":"转载自：http协议无状态中的【状态】到底指的是什么？！ http协议无状态中的【状态】到底指的是什么？！ 先来看这句话的另外两个概念：（标准的","tags":["网络"],"title":"http协议无状态中的状态到底指的是什么","type":"post","url":"/2019-01-19-http%E5%8D%8F%E8%AE%AE%E6%97%A0%E7%8A%B6%E6%80%81%E4%B8%AD%E7%9A%84%E7%8A%B6%E6%80%81%E5%88%B0%E5%BA%95%E6%8C%87%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88/","weight":0,"wordcount":3682},{"author":null,"categories":["net"],"content":"","date":1555653049,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1555653049,"objectID":"25becf39642ae03349b527c6581e9402","permalink":"https://wangzitao6.github.io/2019-04-19-%E4%BA%86%E8%A7%A3arp%E5%8D%8F%E8%AE%AE/","publishdate":"2019-04-19T13:50:49+08:00","readingtime":3,"relpermalink":"/2019-04-19-%E4%BA%86%E8%A7%A3arp%E5%8D%8F%E8%AE%AE/","section":"post","summary":"MAC地址 什么是MAC地址？MAC地址与IP有什么区别？ 大概了解后禁不住会问，那么有了IP地址为什么还要一个MAC地址呢？ 知乎回答:http","tags":["网络"],"title":"了解ARP协议","type":"post","url":"/2019-04-19-%E4%BA%86%E8%A7%A3arp%E5%8D%8F%E8%AE%AE/","weight":0,"wordcount":1347},{"author":null,"categories":["net"],"content":"","date":1555640962,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4500,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1555640962,"objectID":"7ea08bb17d9af6b79944abb571de8026","permalink":"https://wangzitao6.github.io/2019-04-19-tcpip%E5%8D%8F%E8%AE%AE%E4%B8%8Esocket%E5%8C%BA%E5%88%AB/","publishdate":"2019-04-19T10:29:22+08:00","readingtime":9,"relpermalink":"/2019-04-19-tcpip%E5%8D%8F%E8%AE%AE%E4%B8%8Esocket%E5%8C%BA%E5%88%AB/","section":"post","summary":"TCP/IP协议的组成 TCP/IP传输协议，即传输控制/网络协议，也叫作网络通讯协议。它是在网络的使用中的最基本的通信协议。 TCP/IP协议","tags":["网络"],"title":"tcpip协议与socket区别","type":"post","url":"/2019-04-19-tcpip%E5%8D%8F%E8%AE%AE%E4%B8%8Esocket%E5%8C%BA%E5%88%AB/","weight":0,"wordcount":4499},{"author":null,"categories":["sql"],"content":"","date":1552707224,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1552707224,"objectID":"f3ba23808f86945901a5ebc4804e1bec","permalink":"https://wangzitao6.github.io/2018-03-16-mysql%E5%86%85%E7%BD%AE%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0/","publishdate":"2019-03-16T11:33:44+08:00","readingtime":2,"relpermalink":"/2018-03-16-mysql%E5%86%85%E7%BD%AE%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0/","section":"post","summary":"常见的条件判断函数 Name Description CASE Case operator IF() If/else construct IFNULL() Null if/else construct NULLIF(expr1,expr2) Return NULL if expr1 = expr2 CASE 为了后面容易举例子，我们先创建一张表并插入数据 CREATE TABLE demo ( id INT, NAME VARCHAR ( 20 ), age INT ) ENGINE = INNODB; insert","tags":["MySQL"],"title":"Mysql内置条件判断函数","type":"post","url":"/2018-03-16-mysql%E5%86%85%E7%BD%AE%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%87%BD%E6%95%B0/","weight":0,"wordcount":633},{"author":null,"categories":null,"content":null,"date":1546992e3,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1e3,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1546992e3,"objectID":"2f05902e7435de187bb5303fb74f55e2","permalink":"https://wangzitao6.github.io/post/readme/","publishdate":"2019-01-09T00:00:00Z","readingtime":2,"relpermalink":"/post/readme/","section":"post","summary":"Clean White Theme for Hugo CleanWhite is a clean, elegant, but fully functional blog theme for Hugo. Here is a live demo site using this theme. It is based on huxblog Jekyll Theme and Clean Blog Jekyll Theme. These two upstream projects have done awesome jobs to create a blog theme, what I\u0026rsquo;m doing here is porting it to Hugo, of which I like the simplicity and the much faster","tags":null,"title":"Clean White Theme for Hugo","type":"post","url":"/post/readme/","weight":0,"wordcount":953},{"author":null,"categories":["java"],"content":"","date":1542006677,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1542006677,"objectID":"072ca15b7d5f7cf8a66dc335a2fa288d","permalink":"https://wangzitao6.github.io/2018-11-12-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","publishdate":"2018-11-12T15:11:17+08:00","readingtime":6,"relpermalink":"/2018-11-12-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","section":"post","summary":"单例模式 首先我们来考虑下，如何设计一个类，在系统中只能生成该类的一个实体? 懒汉，线程不安全 面对这个问题，我们可以想到把构造函数私有化，以禁止","tags":["设计模式"],"title":"设计模式之单例模式","type":"post","url":"/2018-11-12-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":2559},{"author":null,"categories":["java"],"content":"","date":1536724171,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1536724171,"objectID":"e9e32f56d5e66062e769e0b81b92039e","permalink":"https://wangzitao6.github.io/2019-09-12-hashmap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","publishdate":"2018-09-12T11:49:31+08:00","readingtime":18,"relpermalink":"/2019-09-12-hashmap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","section":"post","summary":"什么是哈希表 哈希表（hash table）也叫散列表，是一种非常重要的数据结构，应用场景及其丰富，许多缓存技术（比如memcached）的核心","tags":["java","基础"],"title":"HashMap实现原理","type":"post","url":"/2019-09-12-hashmap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","weight":0,"wordcount":8936},{"author":null,"categories":["sql"],"content":"EXPLAIN会向我们提供一些MySQL是执行sql的信息","date":1534132153,"description":"EXPLAIN会向我们提供一些MySQL是执行sql的信息","dir":"post/","excerpt_html":"EXPLAIN会向我们提供一些MySQL是执行sql的信息","excerpt_text":"EXPLAIN会向我们提供一些MySQL是执行sql的信息","expirydate":-62135596800,"fuzzywordcount":5500,"html":"EXPLAIN会向我们提供一些MySQL是执行sql的信息","keywords":null,"kind":"page","lang":"en","lastmod":1534132153,"objectID":"4ded8fdb43e8be4e20956aefbb31591c","permalink":"https://wangzitao6.github.io/2018-08-13-%E4%BA%86%E8%A7%A3explain%E8%A7%A3%E9%87%8A%E5%91%BD%E4%BB%A4/","publishdate":"2018-08-13T11:49:13+08:00","readingtime":11,"relpermalink":"/2018-08-13-%E4%BA%86%E8%A7%A3explain%E8%A7%A3%E9%87%8A%E5%91%BD%E4%BB%A4/","section":"post","summary":"1 EXPLAIN概念 EXPLAIN会向我们提供一些MySQL是执行sql的信息： EXPLAIN可以解释说明 SELECT, DELETE, INSERT, REPLACE, and UPDATE 等语句. 当EXPLAI","tags":["MySQL"],"title":"了解MySQL中EXPLAIN解释命令","type":"post","url":"/2018-08-13-%E4%BA%86%E8%A7%A3explain%E8%A7%A3%E9%87%8A%E5%91%BD%E4%BB%A4/","weight":0,"wordcount":5420},{"author":null,"categories":["sql"],"content":"讲解mysql死锁日志里面的一些重要信息","date":1533447406,"description":"讲解mysql死锁日志里面的一些重要信息","dir":"post/","excerpt_html":"讲解mysql死锁日志里面的一些重要信息","excerpt_text":"讲解mysql死锁日志里面的一些重要信息","expirydate":-62135596800,"fuzzywordcount":2800,"html":"讲解mysql死锁日志里面的一些重要信息","keywords":null,"kind":"page","lang":"en","lastmod":1533447406,"objectID":"377dd8d159dc60df5743ecd36edf1f91","permalink":"https://wangzitao6.github.io/2018-08-05-%E6%AD%BB%E9%94%81%E6%97%A5%E5%BF%97/","publishdate":"2018-08-05T13:36:46+08:00","readingtime":6,"relpermalink":"/2018-08-05-%E6%AD%BB%E9%94%81%E6%97%A5%E5%BF%97/","section":"post","summary":"锁的种类\u0026amp;概念 Shared and Exclusive Locks 1. Shared lock: 共享锁,官方描述：permits the transaction that holds the lock to read a row eg：select * from xx where a=1 lock in share mode 2. Exclusive Locks：","tags":["死锁","MySQL"],"title":"死锁-了解MySQL死锁日志","type":"post","url":"/2018-08-05-%E6%AD%BB%E9%94%81%E6%97%A5%E5%BF%97/","weight":0,"wordcount":2754},{"author":null,"categories":["sql"],"content":"","date":1533262326,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":10200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1533262326,"objectID":"071a75c57bd7f8303afde9dcd56cdcf8","permalink":"https://wangzitao6.github.io/2018-08-03-mysql%E5%8A%A0%E9%94%81%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/","publishdate":"2018-08-03T10:12:06+08:00","readingtime":21,"relpermalink":"/2018-08-03-mysql%E5%8A%A0%E9%94%81%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/","section":"post","summary":"1 背景 MySQL/InnoDB的加锁分析，一直是一个比较困难的话题。我在工作过程中，经常会有同事咨询这方面的问题。同时，微博上也经常会收到M","tags":["MySQL"],"title":"MySQL加锁处理分析","type":"post","url":"/2018-08-03-mysql%E5%8A%A0%E9%94%81%E5%A4%84%E7%90%86%E5%88%86%E6%9E%90/","weight":0,"wordcount":10159},{"author":null,"categories":["sql"],"content":"","date":1532830822,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":8800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1532830822,"objectID":"99fa778c44454d6e94b41b0e4cf576a0","permalink":"https://wangzitao6.github.io/2018-07-29-%E5%B8%B8%E8%A7%81sql%E7%9A%84%E8%AF%AD%E5%8F%A5%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90/","publishdate":"2018-07-29T10:20:22+08:00","readingtime":18,"relpermalink":"/2018-07-29-%E5%B8%B8%E8%A7%81sql%E7%9A%84%E8%AF%AD%E5%8F%A5%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90/","section":"post","summary":"解决死锁之路 - 常见 SQL 语句的加锁分析 这篇博客将对一些常见的 SQL 语句进行加锁分析，看看我们平时执行的那些 SQL 都会加什么锁。只有对我们所写的 SQL 语句加锁","tags":["死锁","MySQL"],"title":"死锁-常见SQL的语句加锁分析","type":"post","url":"/2018-07-29-%E5%B8%B8%E8%A7%81sql%E7%9A%84%E8%AF%AD%E5%8F%A5%E5%8A%A0%E9%94%81%E5%88%86%E6%9E%90/","weight":0,"wordcount":8716},{"author":null,"categories":["sql"],"content":"","date":1532744422,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":13200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1532744422,"objectID":"d87b6f25a015d8646c868af4ebd0593e","permalink":"https://wangzitao6.github.io/2018-07-28-%E4%BA%86%E8%A7%A3%E5%B8%B8%E8%A7%81%E7%9A%84%E9%94%81%E7%B1%BB%E5%9E%8B/","publishdate":"2018-07-28T10:20:22+08:00","readingtime":27,"relpermalink":"/2018-07-28-%E4%BA%86%E8%A7%A3%E5%B8%B8%E8%A7%81%E7%9A%84%E9%94%81%E7%B1%BB%E5%9E%8B/","section":"post","summary":"表锁 vs. 行锁 在 MySQL 中锁的种类有很多，但是最基本的还是表锁和行锁：表锁指的是对一整张表加锁，一般是 DDL 处理时使用，也可以自己在 SQL 中指定；而行锁指的是","tags":["死锁","MySQL"],"title":"死锁 - 了解常见的锁类型","type":"post","url":"/2018-07-28-%E4%BA%86%E8%A7%A3%E5%B8%B8%E8%A7%81%E7%9A%84%E9%94%81%E7%B1%BB%E5%9E%8B/","weight":0,"wordcount":13192},{"author":null,"categories":["sql"],"content":"","date":1532504207,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":9200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1532504207,"objectID":"a03f938db93c2680b54d1a59b5f396a8","permalink":"https://wangzitao6.github.io/2018-07-25-%E4%BA%86%E8%A7%A3%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/","publishdate":"2018-07-25T15:36:47+08:00","readingtime":19,"relpermalink":"/2018-07-25-%E4%BA%86%E8%A7%A3%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/","section":"post","summary":"这个月线上环境突然经常报警，排查后发现了下面这样的异常，一天出现三四次的样子。看异常信息就知道是发生了数据库死锁，由于这块对业务影响不是很大","tags":["死锁","MySQL"],"title":"死锁 - 了解事务与隔离级别","type":"post","url":"/2018-07-25-%E4%BA%86%E8%A7%A3%E4%BA%8B%E5%8A%A1%E4%B8%8E%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/","weight":0,"wordcount":9191},{"author":null,"categories":["jvm"],"content":"","date":1530499108,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1530499108,"objectID":"2a4fc189264e7047c1a923d55fec25d4","permalink":"https://wangzitao6.github.io/2018-07-02-java%E4%B8%AD%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E3%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E3%80%81main%28%29%E6%96%B9%E6%B3%95%E5%92%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/","publishdate":"2018-07-02T10:38:28+08:00","readingtime":8,"relpermalink":"/2018-07-02-java%E4%B8%AD%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E3%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E3%80%81main%28%29%E6%96%B9%E6%B3%95%E5%92%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/","section":"post","summary":"静态代码块：用staitc声明，jvm加载类时执行，仅执行一次。 构造代码块：类中直接用{}定义，每一次创建对象时执行。 同一个类中，执行顺序优","tags":["java","jvm"],"title":"Java中静态代码块、代码块、main()方法和构造函数加载顺序","type":"post","url":"/2018-07-02-java%E4%B8%AD%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E3%80%81%E4%BB%A3%E7%A0%81%E5%9D%97%E3%80%81main%28%29%E6%96%B9%E6%B3%95%E5%92%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/","weight":0,"wordcount":3675},{"author":null,"categories":["jvm"],"content":"","date":1530497116,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1e3,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1530497116,"objectID":"c13e3bde6f58975a2be1dc4aa42f777e","permalink":"https://wangzitao6.github.io/2018-07-02-jvm%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/","publishdate":"2018-07-02T10:05:16+08:00","readingtime":2,"relpermalink":"/2018-07-02-jvm%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/","section":"post","summary":"什么是类加载 虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的java类型，","tags":["java","jvm"],"title":"Jvm类加载过程","type":"post","url":"/2018-07-02-jvm%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B/","weight":0,"wordcount":974},{"author":null,"categories":["other"],"content":"博客评论插件gitment登录失败修复","date":1528767117,"description":"博客评论插件gitment登录失败修复","dir":"post/","excerpt_html":"博客评论插件gitment登录失败修复","excerpt_text":"博客评论插件gitment登录失败修复","expirydate":-62135596800,"fuzzywordcount":500,"html":"博客评论插件gitment登录失败修复","keywords":null,"kind":"page","lang":"en","lastmod":1528767117,"objectID":"f58600ad9fb87c3b150329651534818c","permalink":"https://wangzitao6.github.io/2018-06-12-gitment%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5/","publishdate":"2018-06-12T09:31:57+08:00","readingtime":1,"relpermalink":"/2018-06-12-gitment%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5/","section":"post","summary":"gitment登录失败 搭建个人博客之后, 最终还是选择了gitment. 最近突然发现gitment登录失败,报错 [object ProgressEvent]","tags":["blog","其他"],"title":"gitment登录失败","type":"post","url":"/2018-06-12-gitment%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5/","weight":0,"wordcount":403},{"author":null,"categories":["jvm"],"content":"","date":1528167933,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":4800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1528167933,"objectID":"d6cd0ea3100cf515773c073fed9f9f4c","permalink":"https://wangzitao6.github.io/2018-06-05-%E8%99%9A%E6%8B%9F%E6%9C%BAhotspot%E9%80%89%E9%A1%B9%E7%AC%94%E8%AE%B0/","publishdate":"2018-06-05T11:05:33+08:00","readingtime":10,"relpermalink":"/2018-06-05-%E8%99%9A%E6%8B%9F%E6%9C%BAhotspot%E9%80%89%E9%A1%B9%E7%AC%94%E8%AE%B0/","section":"post","summary":"语法 java [ options ] class [ argument \u0026hellip; ] java [ options ] -jar file.jar [ argument \u0026hellip; ] 标准选项 -d32|-d64 -client|-server 以客户端模式还是服务器模式执行虚拟机。 服务器模式的特点是启动速度比较慢，但运行时性能和","tags":["jvm"],"title":"HotSpot选项笔记","type":"post","url":"/2018-06-05-%E8%99%9A%E6%8B%9F%E6%9C%BAhotspot%E9%80%89%E9%A1%B9%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":4717},{"author":null,"categories":["Tech"],"content":"介绍Istio v1alpha3 routing API及其设计原则","date":1528070400,"description":"介绍Istio v1alpha3 routing API及其设计原则","dir":"post/","excerpt_html":"介绍Istio v1alpha3 routing API及其设计原则","excerpt_text":"介绍Istio v1alpha3 routing API及其设计原则","expirydate":-62135596800,"fuzzywordcount":5500,"html":"介绍Istio v1alpha3 routing API及其设计原则","keywords":null,"kind":"page","lang":"en","lastmod":1528070400,"objectID":"419548ad13183dac6d96760c9815824b","permalink":"https://wangzitao6.github.io/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","publishdate":"2018-06-04T00:00:00Z","readingtime":11,"relpermalink":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","section":"post","summary":"\u003cp\u003e到目前为止，Istio提供了一个简单的API来进行流量管理，该API包括了四种资源：RouteRule，DestinationPolicy，EgressRule和Ingress（直接使用了Kubernets的Ingress资源）。借助此API，用户可以轻松管理Istio服务网格中的流量。该API允许用户将请求路由到特定版本的服务，为弹性测试注入延迟和失败，添加超时和断路器等等，所有这些功能都不必更改应用程序本身的代码。\u003c/p\u003e","tags":["Istio"],"title":"Istio v1aplha3 routing API介绍(译文）","type":"post","url":"/2018/06/04/introducing-the-istio-v1alpha3-routing-api/","weight":0,"wordcount":5412},{"author":null,"categories":["Tech"],"content":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","date":1527897600,"description":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","dir":"post/","excerpt_html":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","excerpt_text":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","expirydate":-62135596800,"fuzzywordcount":1800,"html":"在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：","keywords":null,"kind":"page","lang":"en","lastmod":1527897600,"objectID":"5419b65011b3dcb9020c0728e6d70695","permalink":"https://wangzitao6.github.io/2018/06/02/istio08/","publishdate":"2018-06-02T00:00:00Z","readingtime":4,"relpermalink":"/2018/06/02/istio08/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003e在6月1日这一天的早上，Istio社区宣布发布0.8 Release，除了常规的故障修复和性能改进外，这个儿童节礼物里面还有什么值得期待内容呢？让我们来看一看：\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Istio"],"title":"Istio 0.8 Release发布","type":"post","url":"/2018/06/02/istio08/","weight":0,"wordcount":1796},{"author":null,"categories":["other"],"content":"","date":1527560186,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":600,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1527560186,"objectID":"361feb1198fe2e6f19fa9805db3d468f","permalink":"https://wangzitao6.github.io/2018-05-29-%E6%A0%A1%E9%AA%8C%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","publishdate":"2018-05-29T10:16:26+08:00","readingtime":2,"relpermalink":"/2018-05-29-%E6%A0%A1%E9%AA%8C%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","section":"post","summary":"需要通过的手机号： 中国移动：134、135、136、137、138、139、148、150、151、152、157(TD)、158、159、","tags":["正则"],"title":"校验手机号码正则表达式","type":"post","url":"/2018-05-29-%E6%A0%A1%E9%AA%8C%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","weight":0,"wordcount":528},{"author":null,"categories":["net"],"content":"网络的基本知识点","date":1527437328,"description":"网络的基本知识点","dir":"bak/","excerpt_html":"网络的基本知识点","excerpt_text":"网络的基本知识点","expirydate":-62135596800,"fuzzywordcount":200,"html":"网络的基本知识点","keywords":null,"kind":"page","lang":"en","lastmod":1527437328,"objectID":"c3c5c1e45db3058d13a514cfb6cdcb70","permalink":"https://wangzitao6.github.io/2018-05-28-tcpip%E5%8D%8F%E8%AE%AE%E6%97%8F%E4%B8%8Esocket%E5%8C%BA%E5%88%AB/","publishdate":"2018-05-28T00:08:48+08:00","readingtime":1,"relpermalink":"/2018-05-28-tcpip%E5%8D%8F%E8%AE%AE%E6%97%8F%E4%B8%8Esocket%E5%8C%BA%E5%88%AB/","section":"bak","summary":"简介 TCP/IP协议是指因特网整个TCP/IP协议族。不同于ISO模型的七个分层，TCP/IP协议参考模型把所有的TCP/IP系列协议归类到","tags":["网络"],"title":"TcpIp协议族与socket区别","type":"bak","url":"/2018-05-28-tcpip%E5%8D%8F%E8%AE%AE%E6%97%8F%E4%B8%8Esocket%E5%8C%BA%E5%88%AB/","weight":0,"wordcount":178},{"author":null,"categories":["Tips"],"content":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","date":152712e4,"description":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","dir":"post/","excerpt_html":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","excerpt_text":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","expirydate":-62135596800,"fuzzywordcount":200,"html":"Everything about setting up my own ubuntu desktop, it's just a Note in case I need it later","keywords":null,"kind":"page","lang":"en","lastmod":152712e4,"objectID":"acef740336515250f115284b46f1f096","permalink":"https://wangzitao6.github.io/2018/05/24/set_up_my_ubuntu_desktop/","publishdate":"2018-05-24T00:00:00Z","readingtime":1,"relpermalink":"/2018/05/24/set_up_my_ubuntu_desktop/","section":"post","summary":"Generate SSH Key Pair ssh-keygen -C \u0026#34;zhaohuabing@gmail.com\u0026#34; Shadowsocks Install shadowsokcs sudo apt-get install python3-pip sudo pip3 install shadowsocks Create config at config/shadowsocks.json, with the following content: { \u0026#34;server\u0026#34;:\u0026#34;remote-shadowsocks-server-ip-addr\u0026#34;, \u0026#34;server_port\u0026#34;:443, \u0026#34;local_address\u0026#34;:\u0026#34;127.0.0.1\u0026#34;, \u0026#34;local_port\u0026#34;:1080, \u0026#34;password\u0026#34;:\u0026#34;your-passwd\u0026#34;, \u0026#34;timeout\u0026#34;:300, \u0026#34;method\u0026#34;:\u0026#34;aes-256-cfb\u0026#34;, \u0026#34;fast_open\u0026#34;:false, \u0026#34;workers\u0026#34;:1 } Start a local socks proxy sudo sslocal -c config/shadowsocks.json -d start In case there is an openssl error, modify shadowsocks source file. sudo vi /usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py :%s/cleanup/reset/gc Convert shadowsocks socks proxy to http proxy","tags":["ubuntu"],"title":"Everything about Setting Up My Ubuntu Desktop","type":"post","url":"/2018/05/24/set_up_my_ubuntu_desktop/","weight":0,"wordcount":121},{"author":null,"categories":["Tech"],"content":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","date":1527098400,"description":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","dir":"post/","excerpt_html":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","excerpt_text":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","expirydate":-62135596800,"fuzzywordcount":2400,"html":"一些外部的第三方系统可能需要访问系统内部的微服务。例如在网上商店的例子中，外部的推荐服务可能需要接入系统，以获取商店的商品目录信息。相对于内部服务之间的访问而言，外部系统的访问需要进行严格的安全控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527098400,"objectID":"bcf92db93ffdd43ba91e4322cf6c6ece","permalink":"https://wangzitao6.github.io/2018/05/23/external_system_auth/","publishdate":"2018-05-23T18:00:00Z","readingtime":5,"relpermalink":"/2018/05/23/external_system_auth/","section":"post","summary":"外部系统访问控制 除用户访问和微服务之间的相互访问外，外部的第三方系统也可能需要访问系统内部的微服务。例如在上一篇博客的网上商店例子中，外部的","tags":["Microservice","Security"],"title":"微服务安全沉思录之三","type":"post","url":"/2018/05/23/external_system_auth/","weight":0,"wordcount":2340},{"author":null,"categories":["Tech"],"content":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","date":1527087600,"description":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","dir":"post/","excerpt_html":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","excerpt_text":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","expirydate":-62135596800,"fuzzywordcount":2e3,"html":"除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问,根据应用系统数据敏感程度不同，对于系统内微服务的访问也需要进行相应的安全控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527087600,"objectID":"d7d93ee7d2a2b13ec20c157389fd7a3a","permalink":"https://wangzitao6.github.io/2018/05/23/service_2_service_auth/","publishdate":"2018-05-23T15:00:00Z","readingtime":4,"relpermalink":"/2018/05/23/service_2_service_auth/","section":"post","summary":"\u003ch2 id=\"服务间认证与鉴权\"\u003e服务间认证与鉴权\u003c/h2\u003e\n\u003cp\u003e除来自用户的访问请求以外，微服务应用中的各个微服务相互之间还有大量的访问，包括下述场景：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e用户间接触发的微服务之间的相互访问\u003c!-- raw HTML omitted --\u003e\n例如在一个网上商店应用中，用户访问购物车微服务进行结算时，购物车微服务可能需要访问用户评级微服务获取用户的会员级别，以得到用户可以享受购物折扣。\u003c/li\u003e\n\u003cli\u003e非用户触发的微服务之间的相互访问\u003c!-- raw HTML omitted --\u003e\n例如数据同步或者后台定时任务导致的微服务之间的相互访问。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e根据应用系统的数据敏感程度的不同，对于系统内微服务的相互访问可能有不同的安全要求。\u003c/p\u003e","tags":["Microservice","Security"],"title":"微服务安全沉思录之二","type":"post","url":"/2018/05/23/service_2_service_auth/","weight":0,"wordcount":1935},{"author":null,"categories":["Tech"],"content":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","date":1527069600,"description":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","dir":"post/","excerpt_html":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","excerpt_text":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","expirydate":-62135596800,"fuzzywordcount":3100,"html":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在服务调用链中的传递。在这一系列博客里面将分为三个部分对微服务安全进行系统阐述：用户访问认证与鉴权，服务间认证与鉴权，外部系统访问控制。","keywords":null,"kind":"page","lang":"en","lastmod":1527069600,"objectID":"3fc17cbcf909103e423326182d72a807","permalink":"https://wangzitao6.github.io/2018/05/22/user_authentication_authorization/","publishdate":"2018-05-23T10:00:00Z","readingtime":7,"relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post","summary":"这段时间对之前微服务安全相关的一些想法进行了进一步总结和归纳，理清了在之前文章里面没有想得太清楚的地方，例如服务间的认证与鉴权以及用户身份在","tags":["Microservice","Security"],"title":"微服务安全沉思录之一","type":"post","url":"/2018/05/22/user_authentication_authorization/","weight":0,"wordcount":3030},{"author":null,"categories":["Tech"],"content":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","date":1527033600,"description":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","dir":"post/","excerpt_html":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","excerpt_text":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","expirydate":-62135596800,"fuzzywordcount":1200,"html":"Kubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。 Istio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。","keywords":null,"kind":"page","lang":"en","lastmod":1527033600,"objectID":"61cbee2b7380aaa6e9b9f882840da6a0","permalink":"https://wangzitao6.github.io/2018/05/23/istio-auto-injection-with-webhook/","publishdate":"2018-05-23T00:00:00Z","readingtime":3,"relpermalink":"/2018/05/23/istio-auto-injection-with-webhook/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003eKubernets 1.9版本引入了Admission Webhook(web 回调)扩展机制，通过Webhook,开发者可以非常灵活地对Kubernets API Server的功能进行扩展，在API Server创建资源时对资源进行验证或者修改。\u003c/p\u003e\n\u003cp\u003e使用webhook的优势是不需要对API Server的源码进行修改和重新编译就可以扩展其功能。插入的逻辑实现为一个独立的web进程，通过参数方式传入到kubernets中，由kubernets在进行自身逻辑处理时对扩展逻辑进行回调。\u003c/p\u003e\n\u003cp\u003eIstio 0.7版本就利用了Kubernets webhook实现了sidecar的自动注入。\u003c/p\u003e","tags":["Kubernetes","Istio"],"title":"Istio Sidecar自动注入原理","type":"post","url":"/2018/05/23/istio-auto-injection-with-webhook/","weight":0,"wordcount":1133},{"author":null,"categories":["other"],"content":"讲解ssh端口转发的大致原理以及使用","date":1526110641,"description":"讲解ssh端口转发的大致原理以及使用","dir":"post/","excerpt_html":"讲解ssh端口转发的大致原理以及使用","excerpt_text":"讲解ssh端口转发的大致原理以及使用","expirydate":-62135596800,"fuzzywordcount":4500,"html":"讲解ssh端口转发的大致原理以及使用","keywords":null,"kind":"page","lang":"en","lastmod":1526110641,"objectID":"e345ffead667d1610ef947b8e19bbc04","permalink":"https://wangzitao6.github.io/2018-05-12-%E4%BA%86%E8%A7%A3ssh%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","publishdate":"2018-05-12T15:37:21+08:00","readingtime":9,"relpermalink":"/2018-05-12-%E4%BA%86%E8%A7%A3ssh%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","section":"post","summary":"概述 当你在咖啡馆享受免费 WiFi 的时候，有没有想到可能有人正在窃取你的密码及隐私信息？当你发现实验室的防火墙阻止了你的网络应用端口，是不是有苦难言","tags":["端口转发"],"title":"SSH端口转发","type":"post","url":"/2018-05-12-%E4%BA%86%E8%A7%A3ssh%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/","weight":0,"wordcount":4401},{"author":null,"categories":["sql"],"content":"","date":1525574489,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":3100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1525574489,"objectID":"4e7b3efc00879f54d7d25cfdc0787837","permalink":"https://wangzitao6.github.io/2018-05-06-%E4%BA%86%E8%A7%A3sql%E6%B3%A8%E5%85%A5/","publishdate":"2018-05-06T10:41:29+08:00","readingtime":7,"relpermalink":"/2018-05-06-%E4%BA%86%E8%A7%A3sql%E6%B3%A8%E5%85%A5/","section":"post","summary":"1.简介 SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。一般来","tags":["SQL注入","MySQL"],"title":"了解SQL注入","type":"post","url":"/2018-05-06-%E4%BA%86%E8%A7%A3sql%E6%B3%A8%E5%85%A5/","weight":0,"wordcount":3011},{"author":null,"categories":["Life"],"content":null,"date":1525132800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1525132800,"objectID":"14429f8bcce027e828700689f3857119","permalink":"https://wangzitao6.github.io/2018/05/01/may-day-jiulonghu/","publishdate":"2018-05-01T00:00:00Z","readingtime":8,"relpermalink":"/2018/05/01/may-day-jiulonghu/","section":"post","summary":"\u003ch2 id=\"寻浮云牧场不遇\"\u003e寻浮云牧场不遇\u003c/h2\u003e\n\u003cp\u003e五一节前的一周内，几个朋友就纷纷坐不住了，一个二个不再安心上班，开始在微信群里讨论过节要到哪里耍。\n大家思来想去，最后决定还是去理县方向。因为根据多年自驾的经验，只要出了汶川，沿途都是风景。\u003c/p\u003e","tags":["Travel"],"title":"川西秘境探险","type":"post","url":"/2018/05/01/may-day-jiulonghu/","weight":0,"wordcount":3568},{"author":null,"categories":["Tech"],"content":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","date":1523890800,"description":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","dir":"post/","excerpt_html":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","excerpt_text":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","expirydate":-62135596800,"fuzzywordcount":5e3,"html":"Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Helm中使用到的相关概念，并通过一个具体的示例学习如何使用Helm打包，分发，安装，升级及回退Kubernetes应用。","keywords":null,"kind":"page","lang":"en","lastmod":1523890800,"objectID":"8160a1bd8df0fbf81c4f36a3c6e7d3af","permalink":"https://wangzitao6.github.io/2018/04/16/using-helm-to-deploy-to-kubernetes/","publishdate":"2018-04-16T15:00:00Z","readingtime":10,"relpermalink":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","section":"post","summary":"前言 Helm是Kubernetes生态系统中的一个软件包管理工具。本文将介绍为何要使用Helm进行Kubernetes软件包管理，澄清Hel","tags":["Kubernetes","Helm"],"title":"Helm介绍","type":"post","url":"/2018/04/16/using-helm-to-deploy-to-kubernetes/","weight":0,"wordcount":4996},{"author":null,"categories":["Tech"],"content":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","date":1523439120,"description":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","dir":"post/","excerpt_html":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","excerpt_text":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","expirydate":-62135596800,"fuzzywordcount":1700,"html":"API Gateway和Service Mesh的关系是我最近一直在思考的问题，也和同事及社区的朋友之间进行了一些讨论。这篇短文很清晰地总结了两者之间的相似之处以及这两者在微服务架构中的不同用途。","keywords":null,"kind":"page","lang":"en","lastmod":1523439120,"objectID":"10512631762a4eb4fe14a47b7cb61d54","permalink":"https://wangzitao6.github.io/2018/04/11/service-mesh-vs-api-gateway/","publishdate":"2018-04-11T09:32:00Z","readingtime":4,"relpermalink":"/2018/04/11/service-mesh-vs-api-gateway/","section":"post","summary":"Service Mesh vs API Gateway 在前一篇关于Service Mesh的文章中,我提到了几个关于Service Mesh和API Gateway之间关系的问题，在本篇文章","tags":["Microservice","Service Mesh","API Gateway"],"title":"Service Mesh 和 API Gateway的关系探讨（译文）","type":"post","url":"/2018/04/11/service-mesh-vs-api-gateway/","weight":0,"wordcount":1697},{"author":null,"categories":["other"],"content":"","date":1523355677,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1900,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1523355677,"objectID":"5c90700a450f4f11edd842bf77c9c748","permalink":"https://wangzitao6.github.io/2018-04-10-%E9%9B%86%E6%88%90algolia%E6%90%9C%E7%B4%A2/","publishdate":"2018-04-10T18:21:17+08:00","readingtime":4,"relpermalink":"/2018-04-10-%E9%9B%86%E6%88%90algolia%E6%90%9C%E7%B4%A2/","section":"post","summary":"1.简介 Algolia是为你的 APP 或者网站添加搜索的最佳方式。 开发人员可以使用 API 上传并同步希望搜索的数据，然后可以进行相关的配置，比如产品转化","tags":["blog","其他"],"title":"Hugo集成Algolia搜索","type":"post","url":"/2018-04-10-%E9%9B%86%E6%88%90algolia%E6%90%9C%E7%B4%A2/","weight":0,"wordcount":1815},{"author":null,"categories":["Tech"],"content":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","date":1522324800,"description":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","dir":"post/","excerpt_html":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","excerpt_text":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","expirydate":-62135596800,"fuzzywordcount":8500,"html":"作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性,本文介绍了Service Mesh模式如何应对微服务架构的这些挑战，以及Service Mesh的明星开源项目Istio。","keywords":null,"kind":"page","lang":"en","lastmod":1522324800,"objectID":"58e1fcbb286268d60015d8695e72e3b4","permalink":"https://wangzitao6.github.io/2018/03/29/what-is-service-mesh-and-istio/","publishdate":"2018-03-29T12:00:00Z","readingtime":17,"relpermalink":"/2018/03/29/what-is-service-mesh-and-istio/","section":"post","summary":"\u003ch2 id=\"微服务架构的演进\"\u003e微服务架构的演进\u003c/h2\u003e\n\u003cp\u003e作为一种架构模式，微服务将复杂系统切分为数十乃至上百个小服务，每个服务负责实现一个独立的业务逻辑。这些小服务易于被小型的软件工程师团队所理解和修改，并带来了语言和框架选择灵活性，缩短应用开发上线时间，可根据不同的工作负载和资源要求对服务进行独立缩扩容等优势。\u003c/p\u003e\n\u003cp\u003e另一方面，当应用被拆分为多个微服务进程后，进程内的方法调用变成了了进程间的远程调用。引入了对大量服务的连接、管理和监控的复杂性。\u003c/p\u003e","tags":["Microservice","Service Mesh","Istio"],"title":"谈谈微服务架构中的基础设施：Service Mesh与Istio","type":"post","url":"/2018/03/29/what-is-service-mesh-and-istio/","weight":0,"wordcount":8405},{"author":null,"categories":["other"],"content":"","date":1521515171,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1521515171,"objectID":"3e8f0f6dfb58685926161868b91bdbae","permalink":"https://wangzitao6.github.io/2018-03-20-%E9%9B%86%E6%88%90gitment%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/","publishdate":"2018-03-20T11:06:11+08:00","readingtime":2,"relpermalink":"/2018-03-20-%E9%9B%86%E6%88%90gitment%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/","section":"post","summary":"引言 Gitment 是作者实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown","tags":["blog","其他"],"title":"Hugo集成gitment评论系统","type":"post","url":"/2018-03-20-%E9%9B%86%E6%88%90gitment%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":744},{"author":null,"categories":["Tips"],"content":"如何配置docker使用HTTP代理","date":1520964e3,"description":"如何配置docker使用HTTP代理","dir":"post/","excerpt_html":"如何配置docker使用HTTP代理","excerpt_text":"如何配置docker使用HTTP代理","expirydate":-62135596800,"fuzzywordcount":100,"html":"如何配置docker使用HTTP代理","keywords":null,"kind":"page","lang":"en","lastmod":1520964e3,"objectID":"98b8057999561a04d562f017fde4df05","permalink":"https://wangzitao6.github.io/2018/03/13/use-docker-behind-http-proxy/","publishdate":"2018-03-13T18:00:00Z","readingtime":1,"relpermalink":"/2018/03/13/use-docker-behind-http-proxy/","section":"post","summary":"\u003ch2 id=\"ubuntu\"\u003eUbuntu\u003c/h2\u003e\n\u003ch3 id=\"设置docker使用http-proxy\"\u003e设置docker使用http proxy\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo /etc/default/docker\n\nexport http_proxy=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport https_proxy=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport HTTP_PROXY=\u0026#34;http://127.0.0.1:3128/\u0026#34;\nexport HTTPS_PROXY=\u0026#34;http://127.0.0.1:3128/\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e","tags":["Tips","Docker"],"title":"如何配置docker使用HTTP代理","type":"post","url":"/2018/03/13/use-docker-behind-http-proxy/","weight":0,"wordcount":92},{"author":null,"categories":["other"],"content":"","date":1520612202,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1100,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1520612202,"objectID":"2311d4c05a6bb4b30016bdd62163506b","permalink":"https://wangzitao6.github.io/2018-03-10-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/","publishdate":"2018-03-10T00:16:42+08:00","readingtime":3,"relpermalink":"/2018-03-10-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/","section":"post","summary":"1.简介 Hugo 有着 Go 语言的几大优点：跨平台、执行快、部署简单、无需安装依赖，同时作为一款静态博客系统，它主题多、拓展性好、操作简单。是用来搭建个","tags":["blog","其他"],"title":"利用Travis CI将Hugo自動部署到Github Pages","type":"post","url":"/2018-03-10-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/","weight":0,"wordcount":1065},{"author":null,"categories":["net"],"content":"网络基础知识","date":1518709485,"description":"网络基础知识","dir":"post/","excerpt_html":"网络基础知识","excerpt_text":"网络基础知识","expirydate":-62135596800,"fuzzywordcount":1300,"html":"网络基础知识","keywords":null,"kind":"page","lang":"en","lastmod":1518709485,"objectID":"189d6d368b6981bd10ce212c9712faba","permalink":"https://wangzitao6.github.io/2018-02-15-%E5%8D%8F%E8%AE%AE%E5%85%B3%E7%B3%BB/","publishdate":"2018-02-15T23:44:45+08:00","readingtime":3,"relpermalink":"/2018-02-15-%E5%8D%8F%E8%AE%AE%E5%85%B3%E7%B3%BB/","section":"post","summary":"简介 IP地址，标示你电脑的身份！ 子网掩码，可以标示子网划分的情况，所属子网。 默认网关，数据包默认选择的出口！一般是你的路由器地址！ DNS服务","tags":["网络"],"title":"ip地址,子网掩码,网关,dns协议关系","type":"post","url":"/2018-02-15-%E5%8D%8F%E8%AE%AE%E5%85%B3%E7%B3%BB/","weight":0,"wordcount":1290},{"author":null,"categories":["Tips"],"content":"Vim Tips and tricks","date":1518174e3,"description":"Vim Tips and tricks","dir":"post/","excerpt_html":"Vim Tips and tricks","excerpt_text":"Vim Tips and tricks","expirydate":-62135596800,"fuzzywordcount":200,"html":"Vim Tips and tricks","keywords":null,"kind":"page","lang":"en","lastmod":1518174e3,"objectID":"2d0e4272390337188b486ff2335caebb","permalink":"https://wangzitao6.github.io/2018/02/09/vim-tips/","publishdate":"2018-02-09T11:00:00Z","readingtime":1,"relpermalink":"/2018/02/09/vim-tips/","section":"post","summary":"\u003ch2 id=\"vim-graphical-cheat-sheet\"\u003evim graphical cheat sheet\u003c/h2\u003e\n\u003cp\u003e\n  \u003cimg src=\"//img/2018-02-09-vim-tips/vi-vim-cheat-sheet.svg\" alt=\"\"\u003e\n\n\u003c/p\u003e","tags":["Tips","Vim"],"title":"Vim Tips","type":"post","url":"/2018/02/09/vim-tips/","weight":0,"wordcount":181},{"author":null,"categories":["Tips"],"content":"如何使用非root用户执行docker命令","date":1518170400,"description":"如何使用非root用户执行docker命令","dir":"post/","excerpt_html":"如何使用非root用户执行docker命令","excerpt_text":"如何使用非root用户执行docker命令","expirydate":-62135596800,"fuzzywordcount":100,"html":"如何使用非root用户执行docker命令","keywords":null,"kind":"page","lang":"en","lastmod":1518170400,"objectID":"92d7e3e34329f74a5a955e31f5743bae","permalink":"https://wangzitao6.github.io/2018/02/09/docker-without-sudo/","publishdate":"2018-02-09T10:00:00Z","readingtime":1,"relpermalink":"/2018/02/09/docker-without-sudo/","section":"post","summary":"Add the docker group if it doesn\u0026rsquo;t already exist: sudo groupadd docker Add the connected user \u0026ldquo;$USER\u0026rdquo; to the docker group. Change the user name to match your preferred user if you do not want to use your current user: sudo gpasswd -a $USER docker Either do a newgrp docker or log out/in to activate the changes to groups.","tags":["Tips","Docker"],"title":"如何使用非root用户执行docker命令","type":"post","url":"/2018/02/09/docker-without-sudo/","weight":0,"wordcount":59},{"author":null,"categories":["Tech"],"content":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","date":1517659200,"description":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","dir":"post/","excerpt_html":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","excerpt_text":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","expirydate":-62135596800,"fuzzywordcount":5500,"html":"微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。","keywords":null,"kind":"page","lang":"en","lastmod":1517659200,"objectID":"c1d32da205ea082b3dd7061c39ea7e8b","permalink":"https://wangzitao6.github.io/2018/05/22/user_authentication_authorization/","publishdate":"2018-02-03T12:00:00Z","readingtime":11,"relpermalink":"/2018/05/22/user_authentication_authorization/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e微服务架构的引入为软件应用带来了诸多好处：包括小开发团队，缩短开发周期，语言选择灵活性，增强服务伸缩能力等。与此同时，也引入了分布式系统的诸多复杂问题。其中一个挑战就是如何在微服务架构中实现一个灵活，安全，高效的认证和鉴权方案。本文将尝试就此问题进行一次比较完整的探讨。\u003c/p\u003e","tags":["Microservice","Security"],"title":"如何构建安全的微服务应用？","type":"post","url":"/2018/05/22/user_authentication_authorization/","weight":0,"wordcount":5434},{"author":null,"categories":["Tech"],"content":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","date":1514894400,"description":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","dir":"post/","excerpt_html":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","excerpt_text":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","expirydate":-62135596800,"fuzzywordcount":2700,"html":"Nginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。本文介绍如何采用kubeadmin安装kubernetes集群并部署Nginmesh sidecar。","keywords":null,"kind":"page","lang":"en","lastmod":1514894400,"objectID":"f12f8e4e5417662ca5f2745b62aadb1e","permalink":"https://wangzitao6.github.io/2018/01/02/nginmesh-install/","publishdate":"2018-01-02T12:00:00Z","readingtime":6,"relpermalink":"/2018/01/02/nginmesh-install/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003eNginmesh是NGINX的Service Mesh开源项目，用于Istio服务网格平台中的数据面代理。它旨在提供七层负载均衡和服务路由功能，与Istio集成作为sidecar部署，并将以“标准，可靠和安全的方式”使得服务间通信更容易。Nginmesh在今年底已经连续发布了0.2和0.3版本，提供了服务发现，请求转发，路由规则，性能指标收集等功能。\u003c/p\u003e","tags":["Istio","service Mesh","nginmesh"],"title":"Nginx开源Service Mesh组件Nginmesh安装指南","type":"post","url":"/2018/01/02/nginmesh-install/","weight":0,"wordcount":2677},{"author":null,"categories":["Tech"],"content":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","date":1511870400,"description":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","dir":"post/","excerpt_html":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","excerpt_text":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。","keywords":null,"kind":"page","lang":"en","lastmod":1511870400,"objectID":"62314fd01037305fcf6b8c9ad3b3b02d","permalink":"https://wangzitao6.github.io/2017/11/28/access-application-from-outside/","publishdate":"2017-11-28T12:00:00Z","readingtime":12,"relpermalink":"/2017/11/28/access-application-from-outside/","section":"post","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e我们知道，kubernetes的Cluster Network属于私有网络，只能在cluster Network内部才能访问部署的应用，那如何才能将Kubernetes集群中的应用暴露到外部网络，为外部用户提供服务呢？本文探讨了从外部网络访问kubernetes cluster中应用的几种实现方式。\u003c/p\u003e","tags":["Kubernetes"],"title":"如何从外部访问Kubernetes集群中的应用？","type":"post","url":"/2017/11/28/access-application-from-outside/","weight":0,"wordcount":5543},{"author":null,"categories":["Tech"],"content":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","date":1510153200,"description":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","dir":"post/","excerpt_html":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","excerpt_text":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","expirydate":-62135596800,"fuzzywordcount":3300,"html":"当应用上线以后，运维面临的一大挑战是如何能在不影响已上线业务的情况下进行升级。本文将介绍如何使用Istio实现应用的灰度发布（金丝雀发布）","keywords":null,"kind":"page","lang":"en","lastmod":1510153200,"objectID":"320d9f0641802d90086c08b5cf554c4d","permalink":"https://wangzitao6.github.io/2017/11/08/istio-canary-release/","publishdate":"2017-11-08T15:00:00Z","readingtime":7,"relpermalink":"/2017/11/08/istio-canary-release/","section":"post","summary":"灰度发布（又名金丝雀发布）介绍 当应用上线以后，运维面临的一大挑战是如何能够在不影响已上线业务的情况下进行升级。做过产品的同学都清楚，不管在发","tags":["Istio"],"title":"采用Istio实现灰度发布(金丝雀发布)","type":"post","url":"/2017/11/08/istio-canary-release/","weight":0,"wordcount":3210},{"author":null,"categories":["Tech"],"content":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","date":1510012800,"description":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","dir":"post/","excerpt_html":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","excerpt_text":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","expirydate":-62135596800,"fuzzywordcount":1400,"html":"本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。","keywords":null,"kind":"page","lang":"en","lastmod":1510012800,"objectID":"5ae8190e8b21dc18fae6ba6a26ad2f8e","permalink":"https://wangzitao6.github.io/2017/11/07/istio-traffic-shifting/","publishdate":"2017-11-07T00:00:00Z","readingtime":3,"relpermalink":"/2017/11/07/istio-traffic-shifting/","section":"post","summary":"\u003cp\u003e关于Istio的更多内容请参考\u003ca href=\"http://istio.doczh.cn/\"\u003eistio中文文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e原文参见\u003ca href=\"https://istio.io/docs/tasks/traffic-management/traffic-shifting.html\"\u003eTraffic Shifting\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e本任务将演示如何将应用流量逐渐从旧版本的服务迁移到新版本。通过Istio，可以使用一系列不同权重的规则（10%，20%，··· 100%）将流量平缓地从旧版本服务迁移到新版本服务。\u003c/p\u003e","tags":["Istio"],"title":"使用Istio实现应用流量转移","type":"post","url":"/2017/11/07/istio-traffic-shifting/","weight":0,"wordcount":1313},{"author":null,"categories":["Tech"],"content":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","date":1509796800,"description":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","dir":"post/","excerpt_html":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","excerpt_text":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","expirydate":-62135596800,"fuzzywordcount":5600,"html":"Istio是来自Google，IBM和Lyft的一个Service Mesh（服务网格）开源项目，是Google继Kubernetes之后的又一大作,本文将演示如何从裸机开始从零搭建Istio及Bookinfo示例程序。","keywords":null,"kind":"page","lang":"en","lastmod":1509796800,"objectID":"d993f98f09d7341809e97a3c1ba8e960","permalink":"https://wangzitao6.github.io/2017/11/04/istio-install_and_example/","publishdate":"2017-11-04T12:00:00Z","readingtime":12,"relpermalink":"/2017/11/04/istio-install_and_example/","section":"post","summary":"\u003ch2 id=\"服务网格简介\"\u003e服务网格简介\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e服务网格\u003c/strong\u003e（Service Mesh）是为解决微服务的通信和治理而出现的一种\u003cstrong\u003e架构模式\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e服务网格将服务间通讯以及与此相关的管理控制功能从业务程序中下移到一个基础设施层，从而彻底隔离了业务逻辑和服务通讯两个关注点。采用服务网格后，应用开发者只需要关注并实现应用业务逻辑。服务之间的通信，包括服务发现，通讯的可靠性，通讯的安全性，服务路由等由服务网格层进行处理，并对应用程序透明。\u003c/p\u003e","tags":["Istio"],"title":"Istio及Bookinfo示例程序安装试用笔记","type":"post","url":"/2017/11/04/istio-install_and_example/","weight":0,"wordcount":5529},{"author":null,"categories":null,"content":null,"date":1509753600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509753600,"objectID":"cf37d97d83d29e7c3f79c50c928a7a4d","permalink":"https://wangzitao6.github.io/2017/11/03/hello-world/","publishdate":"2017-11-04T00:00:00Z","readingtime":1,"relpermalink":"/2017/11/03/hello-world/","section":"post","summary":"“Yeah It\u0026rsquo;s on. ” Hello World!","tags":null,"title":"Welcome to Zhaohuabing Blog","type":"post","url":"/2017/11/03/hello-world/","weight":0,"wordcount":10},{"author":null,"categories":["other"],"content":"Markdown的一些简单语法笔记","date":1509202770,"description":"Markdown的一些简单语法笔记","dir":"post/","excerpt_html":"Markdown的一些简单语法笔记","excerpt_text":"Markdown的一些简单语法笔记","expirydate":-62135596800,"fuzzywordcount":2600,"html":"Markdown的一些简单语法笔记","keywords":null,"kind":"page","lang":"en","lastmod":1509202770,"objectID":"ed3ecec3f79a8d28ef8230a5e272f88a","permalink":"https://wangzitao6.github.io/2017-10-28-markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/","publishdate":"2017-10-28T22:59:30+08:00","readingtime":6,"relpermalink":"/2017-10-28-markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/","section":"post","summary":"1.内容目录 在段落中填写 [TOC] 以显示全文内容的目录结构。 2.标题 # 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级","tags":["其他"],"title":"markdown常用语法","type":"post","url":"/2017-10-28-markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/","weight":0,"wordcount":2508},{"author":null,"categories":["other"],"content":"用Hugo搭建个人网站","date":1503934876,"description":"用Hugo搭建个人网站","dir":"post/","excerpt_html":"用Hugo搭建个人网站","excerpt_text":"用Hugo搭建个人网站","expirydate":-62135596800,"fuzzywordcount":2200,"html":"用Hugo搭建个人网站","keywords":null,"kind":"page","lang":"en","lastmod":1503934876,"objectID":"1b3fa0fd707a7876e3f13c9fcd72e406","permalink":"https://wangzitao6.github.io/2017-08-28-%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","publishdate":"2017-08-28T23:41:16+08:00","readingtime":5,"relpermalink":"/2017-08-28-%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","section":"post","summary":"摘要： 本文将介绍什么是Hugo，怎么用Hugo搭建个人网站，如何本地测试及如何发布到Github并生成Github pages。 什么是Hugo","tags":["blog","其他"],"title":"用hugo搭建个人网站","type":"post","url":"/2017-08-28-%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","weight":0,"wordcount":2140},{"author":null,"categories":["build"],"content":"Git的一些命令总结","date":1478185830,"description":"Git的一些命令总结","dir":"post/","excerpt_html":"Git的一些命令总结","excerpt_text":"Git的一些命令总结","expirydate":-62135596800,"fuzzywordcount":700,"html":"Git的一些命令总结","keywords":null,"kind":"page","lang":"en","lastmod":1478185830,"objectID":"0310b46a0f383c60ae344cc55ecbfd23","permalink":"https://wangzitao6.github.io/2017-11-03-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","publishdate":"2016-11-03T23:10:30+08:00","readingtime":2,"relpermalink":"/2017-11-03-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","section":"post","summary":"1. 分支操作 1.创建，删除本地分支 git branch 分支名 创建名称为branchname的本地分支 git branch branchName git branch -d 分支名 删除名称为branchname的本地分支","tags":["git"],"title":"git常用命令","type":"post","url":"/2017-11-03-git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","weight":0,"wordcount":636},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://wangzitao6.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"About Me Huabing Zhao is a software architect, an Istio Member and an ONAP PTL. He has a solid experience in the information and telecommunication technology industry for more than 17 years. Throughout his career, he has built a number of large-scale, cross-country software systems, most of them are still running in production. He loves open source and has been contributing to various open source projects, he is a member","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":500},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"bak/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"5174f45bee6754fe6ddee533bcd1e37b","permalink":"https://wangzitao6.github.io/bak/readme/","publishdate":"0001-01-01T00:00:00Z","readingtime":2,"relpermalink":"/bak/readme/","section":"bak","summary":"23.1 Customizing the Banner 启动时打印的banner可以通过向类路径中添加banner.txt文件或通过将banner.location设置为这样一个文件的位置","tags":null,"title":"","type":"bak","url":"/bak/readme/","weight":0,"wordcount":583},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://wangzitao6.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/notes/","section":"","summary":"Go 语言学习笔记 Envoy 学习笔记","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":12},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://wangzitao6.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://wangzitao6.github.io/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"美食爱好者，生活探险家 | 这里是 王子滔 的博客，与你一起发现更大的世界。","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":34},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"54ccacff97b96806d49760361ef17350","permalink":"https://wangzitao6.github.io/top/books/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/books/","section":"top","summary":"Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记 讲师: 吴恩达(Andrew Ng) 课程地址：https://www.coursera.org/lear","tags":null,"title":"","type":"top","url":"/top/books/","weight":0,"wordcount":88},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive/","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://wangzitao6.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]
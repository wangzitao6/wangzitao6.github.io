<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>基础 on 王子滔的学习笔记</title>
    <link>https://wangzitao6.github.io/tags/%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 基础 on 王子滔的学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Aug 2019 10:23:46 +0800</lastBuildDate>
    
	<atom:link href="https://wangzitao6.github.io/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integer的IntegerCache</title>
      <link>https://wangzitao6.github.io/2019-08-26-integer%E7%9A%84integercache/</link>
      <pubDate>Mon, 26 Aug 2019 10:23:46 +0800</pubDate>
      
      <guid>https://wangzitao6.github.io/2019-08-26-integer%E7%9A%84integercache/</guid>
      <description>首先我们来看这样一个例子: int m = 10; int n = 10; System.out.println(m == n); int j = 128; int k = 128; System.out.println(j == k); 输出结果： true true 出现这样的一个结果大家都意外。 下面我们再看一个例子： Integer a</description>
    </item>
    
    <item>
      <title>Java位运算</title>
      <link>https://wangzitao6.github.io/2019-08-24-java%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
      <pubDate>Sat, 24 Aug 2019 15:09:25 +0800</pubDate>
      
      <guid>https://wangzitao6.github.io/2019-08-24-java%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
      <description>单位换算 bit：位 一个二进制数据0或1，是1bit； byte：字节 1 byte = 8 bit , 存储空间的基本计量单位； 一个英文字符占一个字节 1 字母 = 1 byte = 8</description>
    </item>
    
    <item>
      <title>Int类型强制转换byte类型</title>
      <link>https://wangzitao6.github.io/2019-08-24-int%E7%B1%BB%E5%9E%8B%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2byte%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sat, 24 Aug 2019 11:13:05 +0800</pubDate>
      
      <guid>https://wangzitao6.github.io/2019-08-24-int%E7%B1%BB%E5%9E%8B%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2byte%E7%B1%BB%E5%9E%8B/</guid>
      <description>java中为什么int类型的-129转换成byte类型的会变成127 int类型一般是4个字节，一个字节有8位，这样int型数据二进制的完整形</description>
    </item>
    
    <item>
      <title>原码 补码 反码</title>
      <link>https://wangzitao6.github.io/2019-08-23-%E5%8E%9F%E7%A0%81-%E8%A1%A5%E7%A0%81-%E5%8F%8D%E7%A0%81/</link>
      <pubDate>Fri, 23 Aug 2019 16:28:33 +0800</pubDate>
      
      <guid>https://wangzitao6.github.io/2019-08-23-%E5%8E%9F%E7%A0%81-%E8%A1%A5%E7%A0%81-%E5%8F%8D%E7%A0%81/</guid>
      <description>Java数据类型 了解原码、补码、反码之前，我们先看下java的数据类型： Java基本类型共有八种，它们的取值范围是固定的，不会随着机器硬件环</description>
    </item>
    
  </channel>
</rss>